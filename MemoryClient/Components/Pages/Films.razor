@inherits IMDbReviews<FilmModel>

<div class="films scroll">
    <OneLineAdder Header=@($"<a href='{IMDbHelper.BASE_PATH}' target='_blank'>{Header}</a>")
                  Model="ItemAdderViewModel"
                  Placeholder="Введите ссылку IMDb"
                  Create="AddItemIfNotExistAsync" />

    <div class="scroll__panel">
        <Sorting Model="SortingModel" Data="TempItems" UpdateData="UpdateTempItems" SortingParameters="SortingParameters" />
        <div class="scroll__panel__yLine"></div>
        <Filter Model="FilterModel" Data="TempItems" UpdateData="UpdateTempItems" FilterParameters="FilterParameters" />
        <footer>
            <div class="scroll__panel__xLine"></div>
            <button @onclick="Reset">Сбросить</button>
        </footer>
    </div>

    <Pagination Model="PaginationModel" UpdateState="StateHasChanged" />

    <div class="scroll__container">
        @if (TempItems != null && PaginationModel != null)
    {
        var itemsSkipCounter = 1;
        var itemNumber = PaginationModel.PageFirstElementNumber;

        foreach (var item in TempItems)
        {
            //пропускает элементы до нужного элемента
            if (PaginationModel.PageFirstElementNumber > itemsSkipCounter)
            {
                itemsSkipCounter++;
                continue;
            }
            if (itemNumber > PaginationModel.PageLastElementNumber)
                break;

            <div class="scroll__container__box">
                    <figure>
                        <figcaption><h3><a href="@item.Link" target="_blank">@item.Name</a></h3></figcaption>
                        <img src="@(IMDbHelper.IMAGE_REQUEST_PATTERN + item.ImageSource)" alt="Изображение" onerror="this.style='height:250px;'">
                        @*TODO: когда добавляеться в начало новый элемент, на мгновение, происходит дублирование картинки*@
                        @*Не получилось исправить(многое перепробывал)*@
                        @*<img id=@($"filmImg{item.Id}") src='/999-200x300.png' alt="Изображение" @onload='() => { JSRuntime.InvokeVoidAsync($"filmImg{item.Id}.setAttribute", "src", item.ImageSource); }'>*@
                        @*<img src="@item.ImageSource" alt="Изображение" decoding="sync" importance="high" loading="eager">*@
                    </figure>

                    <dl>
                        <dt>Год выхода</dt>
                        <dd>@item.StartingDate.ToShortDateString()</dd>
                        <dt>Продолжительность</dt>
                        <dd>@item.Runtime мин</dd>
                        <dt>IMDb рейтинг</dt>
                        <dd>@item.IMDbRating</dd>
                        <dt>IMDb голосов</dt>
                        <dd>@item.IMDbVotes</dd>
                        <dt>Комментарий</dt>
                        <input type="checkbox" id="showComment@(itemNumber)" />
                        <label label for="showComment@(itemNumber)">п/с</label>
                        <dd>@item.Comment</dd>
                        <dt>Страна</dt>
                        <dd>@item.Country</dd>
                        <dt>Жанр</dt>
                        <dd>@item.Genre</dd>
                        <dt>Описание</dt>
                        <input type="checkbox" id="showDescription@(itemNumber)" />
                        <label label for="showDescription@(itemNumber)">п/с</label>
                        <dd>@item.Information</dd>
                    </dl>

                    <ContextMenu Item="item"
                                 ItemId="item.Id"
                                 ItemNumber="itemNumber"
                                 ShowItemEditor="ShowItemEditor"
                                 UpdateItem="async i => await UpdateItemAsync((FilmModel)i)"
                                 DeleteItem="DeleteItemAsync" />
                </div>

            itemNumber++;
        }
    }
    </div>

    <Pagination Model="PaginationModel" UpdateState="StateHasChanged" />

    <SemiTransparentWrapper @bind-isShowWrapper="@IsShowItemEditorWrapper">
        <EditForm class="scroll__itemEditor" Model="ItemEditorModel" OnValidSubmit="UpdateItemAsync">
            <h4>Редактировать</h4>
            <p>
                <label for="scroll__itemEditor__folder">Папка: </label>
                <select id="scroll__itemEditor__folder" @bind="ItemEditorModel.FolderName" @bind:event="onchange">
                    @if (FolderName == FolderNames.FilmsWatched)
                {
                    <option value="@FolderNames.FilmsWatched">@(FolderNames.FilmsWatched.GetAttribute<DisplayAttribute>().Name)</option>
                        <option value="@FolderNames.FilmsWillWatch">@(FolderNames.FilmsWillWatch.GetAttribute<DisplayAttribute>().Name)</option>
                }
                else if (FolderName == FolderNames.CartoonFilmsWatched)
                {
                    <option value="@FolderNames.CartoonFilmsWatched">@(FolderNames.CartoonFilmsWatched.GetAttribute<DisplayAttribute>().Name)</option>
                        <option value="@FolderNames.FilmsWillWatch">@(FolderNames.FilmsWillWatch.GetAttribute<DisplayAttribute>().Name)</option>
                }
                else if (FolderName == FolderNames.FilmsWillWatch)
                {
                    <option value="@FolderNames.FilmsWillWatch">@(FolderNames.FilmsWillWatch.GetAttribute<DisplayAttribute>().Name)</option>
                        <option value="@FolderNames.FilmsWatched">@(FolderNames.FilmsWatched.GetAttribute<DisplayAttribute>().Name)</option>
                        <option value="@FolderNames.CartoonFilmsWatched">@(FolderNames.CartoonFilmsWatched.GetAttribute<DisplayAttribute>().Name)</option>
                }
                else if (FolderName == FolderNames.FilmsBreakingPsycheWatched || FolderName == FolderNames.FilmsBreakingPsycheWillWatch)
                {
                    <option value="@FolderNames.FilmsBreakingPsycheWatched">@(FolderNames.FilmsBreakingPsycheWatched.GetAttribute<DisplayAttribute>().Name)</option>
                        <option value="@FolderNames.FilmsBreakingPsycheWillWatch">@(FolderNames.FilmsBreakingPsycheWillWatch.GetAttribute<DisplayAttribute>().Name)</option>
                        <option value="@FolderNames.FilmsWatched">@(FolderNames.FilmsWatched.GetAttribute<DisplayAttribute>().Name)</option>
                        <option value="@FolderNames.FilmsWillWatch">@(FolderNames.FilmsWillWatch.GetAttribute<DisplayAttribute>().Name)</option>
                }
                </select>
            </p>
            <p>
                <label for="scroll__itemEditor__comment">Комментарий: </label>
                <textarea type="text" id="scroll__itemEditor__comment" @bind="ItemEditorModel.Comment" />
            </p>
            <p>
                <input type="submit" value="Сохранить">
                <input type="reset" value="Отмена" @onclick:preventDefault @onclick="() => IsShowItemEditorWrapper = false">
            </p>
        </EditForm>
    </SemiTransparentWrapper>
</div>
